---------
Workflow (from copy-num-est root directory)
---------

Note:
a. <HOME> indicates project home, e.g. /projects/btl/yflim/copy-num-est
b. Dataset (genome) used as example(s) below not consistent; e.g. some use C. elegans, while others use Bovine adenovirus, or some use real and some simulated data.
c. Relative locations of folders in examples below may not always be accurate.


1. Can be done just once per strain/whatever (defined as association with one reference genome)

cd to species data folder, e.g.:
$ cd data/celegans

Create folder for strain, e.g.:
$ mkdir N2
$ cd N2

Create folder for reference, e.g.:
$ mkdir reference
...
Index for BWA:
$ bwa index reference/celegans.N2.genome.fa

Create folder for datasets, e.g.:
$ mkdir datasets

Create folder(s) for simulations, e.g.:
$ mkdir simulations
$ cd simulations
$ mkdir 50x
$ cd 50x
$ <HOME>/scripts/utils/sim_mutate-ref_idx.sh -e 0.001-0.005 -E 0.002-0.01 -L 150 -C 30 [-H] ../../../reference_genomes/celegans.N2.genome.fa

2. Can be done just once per dataset (including each set of simulated reads). (Starting from strain folder, data/celegans/N2.)

Create folder for (real genome) dataset, e.g. (first cd back to datasets folder):
$ cd ../..
$ mkdir DRR008444/

$ cd DRR008444/

Create folder for reads and copy dataset read files into it, e.g.:
$ mkdir reads
$ cp <reads_filepath> reads

Run ntcard over a range of possible ks, in order to choose a few best candidates based on output k-mer frequency (read coverage) histograms:
$ mkdir ntcard
$ cd ntcard
$ <HOME>/scripts/utils/run-and-plot_ntcard.sh 60 5 120 kmer-freq ../reads/diploid.fastq.bwa.read1.fastq ../reads/diploid.fastq.bwa.read2.fastq

Assemble reads, e.g.:
$ cd ..
$ mkdir k70
$ cd k70
$ <HOME>/scripts/utils/abyss-and-aln.sh 70 2 ../reads/haploid.fastq.bwa.read1.fastq ../reads/haploid.fastq.bwa.read2.fastq bovine-adenovirus 1 ../mutations/Bovine_adenovirus_6.mutated.fa
$ cd ..
$ mkdir k75
...

$ cd k<k>
$ <HOME>/scripts/utils/est-and-eval.sh -Hei bovine-adenovirus 80
OR
$ <HOME>/scripts/utils/est-and-eval.sh -h -e|o [-i] celegans 80

3. (Can be done earlier if omitting estimation results.) Plot alignment feature (e.g. edit distance, perfect match) distributions by sequence length and depth, and optionally by estimated copy number.
$ python <HOME>/scripts/utils/alignment-stats_plots.py <k> <ref_aln_counts_csv> abyss-out/<unitigs_fasta> <alnmt_stats_plots_folder> [aln_est_counts]
